/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.application.forms.reservation;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import main.application.Application;
import main.application.components.HeaderWithButton;
import main.application.components.TableWithPagination;
import main.application.components.table.cell.TableActionEvent;
import main.application.forms.FormType;
import main.model.Reservation;
import main.model.table.ReservationTableModel;
import main.service.ReservationService;
import main.service.other.Response;
import main.util.Dialog;

/**
 *
 * @author aldes
 */
public class ReservationForm extends JPanel {

    private final ReservationService service = new ReservationService();
    private ReservationTableModel model;

    /**
     * Creates new form DefaultForm
     */
    public ReservationForm() {
        System.out.println("Reservation init");
        
        initComponents();
        init();
    }

    private void init() {
        JPanel panel = bodyPanel.getPanel();

        header = new HeaderWithButton((ae) -> {
            Application.showForm(new ReservationInputForm());
        });
        header.setTitleText("Reservasi");
        header.setButtonText("Tambah");
        panel.add(header, "growx, wrap");

        initTable(panel);
    }

    private void initTable(JPanel panel) {
        model = new ReservationTableModel();
        model.setTableAction(new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                Reservation item = find(((Reservation) model.find(row)).getId());

                if (item != null) {
                    Application.showForm(new ReservationInputForm(item, FormType.EDIT));
                }
            }

            @Override
            public void onDelete(int row) {
                delete(row);
            }

            @Override
            public void onView(int row) {
                Reservation item = find(((Reservation) model.find(row)).getId());

                if (item != null) {
                    Application.showForm(new ReservationInputForm(item, FormType.VIEW));
                }
            }

        });

        table = new TableWithPagination(model);
        panel.add(table, "wrap, growx");
    }

    private Reservation find(Long id) {
        try {
            return new Reservation().find(id);
        } catch (SQLException ex) {
            Dialog dialog = new Dialog("Perhatian");
            dialog.setMessage("Data tidak dapat ditemukan");
            dialog.setMessageType(JOptionPane.ERROR_MESSAGE);
            dialog.setOptionType(JOptionPane.DEFAULT_OPTION);
            dialog.show(getRootPane());
            
            ex.printStackTrace();
        }

        return null;
    }

    private void delete(int row) {
        Reservation data = (Reservation) model.find(row);

        Dialog dialog = new Dialog("Perhatian");
        dialog.setMessage("Anda yakin ?");
        dialog.setMessageType(JOptionPane.QUESTION_MESSAGE);
        dialog.setOptionType(JOptionPane.YES_NO_OPTION);
        Object status = dialog.show(getRootPane());

        if (!status.equals(0)) {
            return;
        }

        Response response = service.delete(data);

        if (response.isSuccess()) {
            model.delete(row);
        }

        dialog.setMessageType(response.isSuccess() ? JOptionPane.INFORMATION_MESSAGE : JOptionPane.ERROR_MESSAGE);
        dialog.setMessage(response.getMessage());
        dialog.setOptionType(JOptionPane.DEFAULT_OPTION);
        dialog.show(getRootPane());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new main.application.components.BodyPanel();

        setLayout(new java.awt.BorderLayout());
        add(bodyPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private HeaderWithButton header;
    private TableWithPagination table;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private main.application.components.BodyPanel bodyPanel;
    // End of variables declaration//GEN-END:variables
}
